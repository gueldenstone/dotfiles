--[[
lvim is the global options object

Linters should be
filled in as strings with either
a global executable or a path to
an executable
]]
-- THESE ARE EXAMPLE CONFIGS FEEL FREE TO CHANGE TO WHATEVER YOU WANT

-- general
lvim.log.level = "warn"
lvim.format_on_save = true
lvim.colorscheme = "everforest"
vim.opt.relativenumber = true

-- lualine
lvim.builtin.lualine.style = "default"
lvim.builtin.lualine.sections.lualine_b = { "branch", "diff", "diagnostics" }

-- keymappings [view all the defaults by pressing <leader>Lk]
lvim.leader = "space"

-- disable cursors, but use up and down for scrolling
vim.api.nvim_set_keymap('', '<Up>', '<C-y>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('', '<Down>', '<C-e>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('', '<Left>', '<Nop>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('', '<Right>', '<Nop>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('n', '<Left>', '<Nop>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('n', '<Right>', '<Nop>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '<Left>', '<Nop>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '<Right>', '<Nop>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('', '<Left>', '<Nop>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('', '<Right>', '<Nop>', { noremap = true, silent = true })

-- keepcursor in the middle
vim.opt.scrolloff=30

-- diable mouse
vim.opt.mouse = ""
-- add your own keymapping
lvim.keys.normal_mode["<C-s>"] = ":w<cr>"

lvim.builtin.dashboard.active = true
lvim.builtin.notify.active = true
lvim.builtin.terminal.active = true
lvim.builtin.project.active = false
lvim.builtin.nvimtree.setup.view.side = "left"
lvim.builtin.nvimtree.show_icons.git = 0
lvim.builtin.autopairs.active = false

-- if you don't want all the parsers change this to a table of the ones you want
lvim.builtin.treesitter.ensure_installed = {
  "bash",
  "c",
  "cpp",
  "javascript",
  "json",
  "lua",
  "python",
  "typescript",
  "tsx",
  "css",
  "rust",
  "java",
  "yaml",
}

lvim.builtin.treesitter.ignore_install = { "haskell" }
lvim.builtin.treesitter.highlight.enabled = true

-- plugins
lvim.plugins = {
  {"sainnhe/everforest"},
  {"tpope/vim-repeat"},
  {
    "ggandor/lightspeed.nvim",
    event = "BufRead",
  },
  {
    "klen/nvim-config-local",
    config = function()
      require('config-local').setup {
        -- Default configuration (optional)
        config_files = { ".vimrc.lua", ".vimrc" },  -- Config file patterns to load (lua supported)
        hashfile = vim.fn.stdpath("data") .. "/config-local", -- Where the plugin keeps files data
        autocommands_create = true,                 -- Create autocommands (VimEnter, DirectoryChanged)
        commands_create = true,                     -- Create commands (ConfigSource, ConfigEdit, ConfigTrust, ConfigIgnore)
        silent = false,                             -- Disable plugin messages (Config loaded/ignored)
      }
    end
  },
  {
    "npxbr/glow.nvim",
    ft = {"markdown"}
  }
}

-- debugging

-- termdebug
vim.cmd("packadd termdebug")
-- keymaps
vim.cmd("tnoremap <Esc> <C-\\><C-n>")
lvim.builtin.which_key.mappings["d"] = {
  name = "Debug",
  d = { "<cmd>Termdebug<cr>", "Start Termdebug" },
  b = { "<cmd>Break<cr>", "Insert Breakpoint" },
  c = { "<cmd>Clear<cr>", "Clear Termdebug" },
}
-- set gdb to local gdb
vim.cmd("let g:termdebugger = $GDB")

-- autopairs manual
--autoclose and position cursor to write text inside
vim.api.nvim_set_keymap('i', "'", "''<left>", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', "`", "``<left>", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '"', '""<left>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '(', "()<left>", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '[', "[]<left>", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '{', "{}<left>", { noremap = true, silent = true })
--autoclose with ; and position cursor to write text inside
vim.api.nvim_set_keymap('i', "';", "'';<left><left>", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', "`;", "``;<left><left>", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '";', '"";<left><left>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '(;', "();<left><left>", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '[;', "[];<left><left>", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '{;', "{};<left><left>", { noremap = true, silent = true })
--autoclose with , and position cursor to write text inside
vim.api.nvim_set_keymap('i', "',", "'',<left><left>", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '`', "``,<left><left>", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '",', '"",<left><left>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '(,', "(),<left><left>", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '[,', "[],<left><left>", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '{,', "{},<left><left>", { noremap = true, silent = true })
--autoclose and position cursor after
vim.api.nvim_set_keymap('i', "'<tab>", "''", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', "`<tab>", "``", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '"<tab>', '""', { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '(<tab>', "()", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '[<tab>', "[]", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '{<tab>', "{}", { noremap = true, silent = true })
--autoclose with ; and position cursor after
vim.api.nvim_set_keymap('i', "';<tab>", "'';", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '`;<tab>', "``;", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '";<tab>', '"";', { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '(;<tab>', "();", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '[;<tab>', "[];", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '{;<tab>', "{};", { noremap = true, silent = true })
--autoclose with , and position cursor after
vim.api.nvim_set_keymap('i', "',<tab>", "'',", { noremap = true, silent = true })
vim.api.nvim_set_keymap('i', '`,<tab>', "``,", { noremap = true, silent = true })
